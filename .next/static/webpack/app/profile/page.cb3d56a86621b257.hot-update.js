"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/profile/page",{

/***/ "(app-pages-browser)/./src/hooks/useUser.tsx":
/*!*******************************!*\
  !*** ./src/hooks/useUser.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserProvider: function() { return /* binding */ UserProvider; },\n/* harmony export */   useUser: function() { return /* binding */ useUser; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_firebaseClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/firebaseClient */ \"(app-pages-browser)/./src/lib/firebaseClient.ts\");\n/* __next_internal_client_entry_do_not_use__ UserProvider,useUser auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst UserContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction UserProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [profile, setProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const auth = (0,_lib_firebaseClient__WEBPACK_IMPORTED_MODULE_2__.getFirebaseAuth)();\n        if (!auth) {\n            console.error(\"Firebase auth not available\");\n            setLoading(false);\n            return;\n        }\n        // Set loading to true initially\n        setLoading(true);\n        setUser(null);\n        setProfile(null);\n        const unsubscribe = auth.onAuthStateChanged(async (firebaseUser)=>{\n            setUser(firebaseUser);\n            if (firebaseUser) {\n                try {\n                    // Try to load profile from API/database\n                    const response = await fetch(\"/api/users?uid=\".concat(firebaseUser.uid));\n                    const data = await response.json();\n                    if (response.ok && data.user) {\n                        // Profile found in database\n                        const profileFromDb = {\n                            uid: data.user.uid,\n                            email: data.user.email,\n                            displayName: data.user.displayName,\n                            photoURL: firebaseUser.photoURL,\n                            emailVerified: firebaseUser.emailVerified,\n                            storeName: data.user.storeName,\n                            phoneNumber: data.user.phoneNumber,\n                            nationalId: data.user.nationalId,\n                            businessOwnerName: data.user.businessOwnerName,\n                            businessOwnerEmail: data.user.businessOwnerEmail,\n                            businessOwnerPhone: data.user.businessOwnerPhone,\n                            storeCountry: data.user.storeCountry,\n                            storeCity: data.user.storeCity,\n                            storeAddress1: data.user.storeAddress1,\n                            storeAddress2: data.user.storeAddress2,\n                            postalCode: data.user.postalCode,\n                            vatNumber: data.user.vatNumber\n                        };\n                        setProfile(profileFromDb);\n                        // Also save to localStorage for immediate access\n                        localStorage.setItem(\"user_profile_\".concat(firebaseUser.uid), JSON.stringify(profileFromDb));\n                        console.log(\"✅ Profile loaded from database:\", firebaseUser.uid);\n                    } else {\n                        // No profile in database, create from Firebase user\n                        const defaultProfile = {\n                            uid: firebaseUser.uid,\n                            email: firebaseUser.email || \"\",\n                            displayName: firebaseUser.displayName,\n                            photoURL: firebaseUser.photoURL,\n                            emailVerified: firebaseUser.emailVerified\n                        };\n                        setProfile(defaultProfile);\n                        // Save to localStorage for immediate access\n                        localStorage.setItem(\"user_profile_\".concat(firebaseUser.uid), JSON.stringify(defaultProfile));\n                        console.log(\"ℹ️ No database profile found, using Firebase data:\", firebaseUser.uid);\n                    }\n                } catch (error) {\n                    console.error(\"❌ Error loading profile from API:\", error);\n                    // Fallback to localStorage\n                    const savedProfile = localStorage.getItem(\"user_profile_\".concat(firebaseUser.uid));\n                    if (savedProfile) {\n                        try {\n                            const parsedProfile = JSON.parse(savedProfile);\n                            setProfile({\n                                uid: firebaseUser.uid,\n                                email: firebaseUser.email || \"\",\n                                displayName: firebaseUser.displayName,\n                                photoURL: firebaseUser.photoURL,\n                                emailVerified: firebaseUser.emailVerified,\n                                ...parsedProfile\n                            });\n                            console.log(\"✅ Profile loaded from localStorage fallback:\", firebaseUser.uid);\n                        } catch (parseError) {\n                            console.error(\"❌ Error parsing localStorage profile:\", parseError);\n                            // Create default profile\n                            const defaultProfile = {\n                                uid: firebaseUser.uid,\n                                email: firebaseUser.email || \"\",\n                                displayName: firebaseUser.displayName,\n                                photoURL: firebaseUser.photoURL,\n                                emailVerified: firebaseUser.emailVerified\n                            };\n                            setProfile(defaultProfile);\n                        }\n                    } else {\n                        // Create default profile\n                        const defaultProfile = {\n                            uid: firebaseUser.uid,\n                            email: firebaseUser.email || \"\",\n                            displayName: firebaseUser.displayName,\n                            photoURL: firebaseUser.photoURL,\n                            emailVerified: firebaseUser.emailVerified\n                        };\n                        setProfile(defaultProfile);\n                    }\n                }\n            } else {\n                setProfile(null);\n            }\n            setLoading(false);\n        });\n        // Fallback timeout to prevent infinite loading\n        const timeout = setTimeout(()=>{\n            setLoading(false);\n        }, 5000);\n        return ()=>{\n            unsubscribe();\n            clearTimeout(timeout);\n        };\n    }, []);\n    const updateProfile = async (updates)=>{\n        if (!user || !profile) return;\n        const updatedProfile = {\n            ...profile,\n            ...updates\n        };\n        setProfile(updatedProfile);\n        localStorage.setItem(\"user_profile_\".concat(user.uid), JSON.stringify(updatedProfile));\n        try {\n            // Sync to database via API\n            const response = await fetch(\"/api/users\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    uid: user.uid,\n                    email: user.email,\n                    displayName: updatedProfile.displayName,\n                    storeName: updatedProfile.storeName,\n                    phoneNumber: updatedProfile.phoneNumber,\n                    nationalId: updatedProfile.nationalId,\n                    businessOwnerName: updatedProfile.businessOwnerName,\n                    businessOwnerEmail: updatedProfile.businessOwnerEmail,\n                    businessOwnerPhone: updatedProfile.businessOwnerPhone,\n                    storeCountry: updatedProfile.storeCountry,\n                    storeCity: updatedProfile.storeCity,\n                    storeAddress1: updatedProfile.storeAddress1,\n                    storeAddress2: updatedProfile.storeAddress2,\n                    postalCode: updatedProfile.postalCode,\n                    vatNumber: updatedProfile.vatNumber\n                })\n            });\n            if (response.ok) {\n                console.log(\"✅ Profile updated in database:\", user.uid);\n            } else {\n                console.error(\"❌ Failed to update profile in database:\", response.statusText);\n            }\n        } catch (error) {\n            console.error(\"❌ Error updating profile in database:\", error);\n        // Continue with localStorage fallback\n        }\n    };\n    const refreshProfile = async ()=>{\n        if (!user) return;\n        try {\n            // Fetch fresh profile from API/database\n            const response = await fetch(\"/api/users?uid=\".concat(user.uid));\n            const data = await response.json();\n            if (response.ok && data.user) {\n                const refreshedProfile = {\n                    uid: data.user.uid,\n                    email: data.user.email,\n                    displayName: data.user.displayName,\n                    photoURL: user.photoURL,\n                    emailVerified: user.emailVerified,\n                    storeName: data.user.storeName,\n                    phoneNumber: data.user.phoneNumber,\n                    nationalId: data.user.nationalId,\n                    businessOwnerName: data.user.businessOwnerName,\n                    businessOwnerEmail: data.user.businessOwnerEmail,\n                    businessOwnerPhone: data.user.businessOwnerPhone,\n                    storeCountry: data.user.storeCountry,\n                    storeCity: data.user.storeCity,\n                    storeAddress1: data.user.storeAddress1,\n                    storeAddress2: data.user.storeAddress2,\n                    postalCode: data.user.postalCode,\n                    vatNumber: data.user.vatNumber\n                };\n                setProfile(refreshedProfile);\n                localStorage.setItem(\"user_profile_\".concat(user.uid), JSON.stringify(refreshedProfile));\n                console.log(\"✅ Profile refreshed from database:\", user.uid);\n            } else {\n                console.log(\"ℹ️ No fresh profile data available from database\");\n            }\n        } catch (error) {\n            console.error(\"❌ Error refreshing profile from database:\", error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(UserContext.Provider, {\n        value: {\n            user,\n            profile,\n            loading,\n            updateProfile,\n            refreshProfile\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"c:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Simbi-Seller\\\\src\\\\hooks\\\\useUser.tsx\",\n        lineNumber: 250,\n        columnNumber: 5\n    }, this);\n}\n_s(UserProvider, \"DYSpA4ZauWKW8e4CNkO4ayA+RbM=\");\n_c = UserProvider;\nfunction useUser() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(UserContext);\n    if (context === undefined) {\n        throw new Error(\"useUser must be used within a UserProvider\");\n    }\n    return context;\n}\n_s1(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useUser.tsx\n"));

/***/ })

});